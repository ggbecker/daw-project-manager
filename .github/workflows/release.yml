# .github/workflows/release.yaml

name: Flutter CI/CD (Windows & macOS)

# PERMISSÃO NECESSÁRIA para o upload funcionar.
permissions:
  contents: write 

# 1. Gatilhos do Workflow
on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*' 

# Variáveis de Configuração
env:
  FLUTTER_BASE_VERSION: 3.24.x 

# 2. Jobs
jobs:
  # Job de Teste de Integração (para Pull Requests)
  test_pr_build:
    name: Test PR Build (Windows)
    if: github.event_name == 'pull_request'
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter ${{ env.FLUTTER_BASE_VERSION }} (Stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_BASE_VERSION }}
          channel: 'stable' 

      - name: Run Flutter Upgrade
        run: flutter upgrade

      - name: Get dependencies & Build Test
        run: |
          flutter pub get
          flutter build windows --release


  # Job UNIFICADO de Release/Upload (usando Matrix para Windows e macOS)
  release_build_upload:
    name: Build & Upload (${{ matrix.os_name }})
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    
    # Configura a Matriz
    strategy:
      matrix:
        include:
          - os: macos-latest
            os_name: macOS
            command: flutter build macos --release
            asset_path: build/macos/Build/Products/Release/DAW_Project_Manager-${{ github.ref_name }}.zip
            asset_name: DAW_Project_Manager_macOS.zip
            zip_needed: true
            asset_content_type: application/zip # CORREÇÃO: Content Type para ZIP
          - os: windows-latest
            os_name: Windows
            command: flutter build windows --release
            asset_path: build/windows/x64/runner/Release/daw_project_manager.exe
            asset_name: DAW_Project_Manager_Windows.exe
            zip_needed: false
            asset_content_type: application/vnd.microsoft.portable-executable # CORREÇÃO: Content Type para EXE
            
    steps:
      - uses: actions/checkout@v4

      # 1. Setup Flutter (Canal STABLE)
      - name: Setup Flutter ${{ env.FLUTTER_BASE_VERSION }} (Stable)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_BASE_VERSION }}
          channel: 'stable' 

      - name: Run Flutter Upgrade
        run: flutter upgrade

      - name: Get dependencies
        run: flutter pub get

      # 3. Build (Comando é específico da Matrix)
      - name: Build ${{ matrix.os_name }} Executable
        run: ${{ matrix.command }}
      
      # 4. Zip (Apenas para macOS)
      - name: Zip macOS App Bundle
        if: matrix.zip_needed == true
        run: |
          cd build/macos/Build/Products/Release
          zip -r DAW_Project_Manager-${{ github.ref_name }}.zip daw_project_manager.app
          
      # 5. Encontra a URL de Upload do Release existente
      - name: Find Existing Release URL
        id: find_release
        uses: actions/github-script@v6
        env:
          RELEASE_TAG: ${{ github.ref_name }}
        with:
          script: |
            try {
              const { data: release } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: process.env.RELEASE_TAG,
              });
              core.setOutput('upload_url', release.upload_url);
              console.log(`Found Release URL: ${release.upload_url}`);
            } catch (error) {
              core.setFailed(`Release with tag ${process.env.RELEASE_TAG} not found. Please create a Release manually on GitHub matching this tag before pushing the tag.`);
            }

      # 6. Upload do Artefato
      - name: Upload ${{ matrix.os_name }} Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.find_release.outputs.upload_url }} 
          asset_path: ${{ matrix.asset_path }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }} # CORREÇÃO APLICADA